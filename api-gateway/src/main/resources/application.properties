spring.application.name=api-gateway
server.port=9100

# Eureka client configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Route for microservice-commandes with Circuit Breaker and fallback
spring.cloud.gateway.routes[0].id=microservice-commandes
spring.cloud.gateway.routes[0].uri=lb://microservice-commandes
spring.cloud.gateway.routes[0].predicates[0]=Path=/commandes/**
#spring.cloud.gateway.routes[0].filters[0]=CircuitBreaker=name=commandesCircuitBreaker,fallbackUri=forward:/fallback/commandes


# Route for microservice-produit with Circuit Breaker and fallback
spring.cloud.gateway.routes[1].id=microservice-produit
spring.cloud.gateway.routes[1].uri=lb://microservice-produit
spring.cloud.gateway.routes[1].predicates[0]=Path=/produits/**
#spring.cloud.gateway.routes[1].filters[0]=CircuitBreaker=name=produitsCircuitBreaker,fallbackUri=forward:/fallback/produits
#
## Gateway response timeout (adjust if needed)
#spring.cloud.gateway.httpclient.response-timeout=3000
#
## Resilience4J settings for circuit breaker
#resilience4j.circuitbreaker.instances.commandesCircuitBreaker.minimumNumberOfCalls=3
#resilience4j.circuitbreaker.instances.commandesCircuitBreaker.slidingWindowType=count_based
#resilience4j.circuitbreaker.instances.commandesCircuitBreaker.slidingWindowSize=5
#resilience4j.circuitbreaker.instances.commandesCircuitBreaker.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.commandesCircuitBreaker.waitDurationInOpenState=5000




# Enable logging for debugging
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG
logging.level.io.github.resilience4j=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator=DEBUG

# Enable Eureka client
eureka.client.enabled=true


eureka.client.disable-delta=true
spring.main.web-application-type=reactive

